{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tarik/Desktop/admin-app/components/DonutChart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nvar Chart = dynamic(function () {\n  return import('react-apexcharts');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-apexcharts')];\n    },\n    modules: ['react-apexcharts']\n  }\n});\n\nvar DonutChart = /*#__PURE__*/function (_Component) {\n  _inherits(DonutChart, _Component);\n\n  var _super = _createSuper(DonutChart);\n\n  function DonutChart(props) {\n    var _this;\n\n    _classCallCheck(this, DonutChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      series: [8, 1, 1],\n      // Green, red, yellow\n      options: {\n        labels: ['Completed', 'Ended', 'Pending'],\n        colors: ['#2ED47A', '#F7685B', '#FFB946'],\n        dataLabels: {\n          enabled: false\n        },\n        dropShadow: {\n          enabled: false\n        },\n        legend: {\n          fontSize: '14px',\n          fontFamily: 'Poppins',\n          fontWeight: 400,\n          markers: {\n            width: 12,\n            height: 12,\n            strokeWidth: 0,\n            strokeColor: '#fff',\n            fillColors: undefined,\n            radius: 12,\n            customHTML: function customHTML() {\n              return '<i class=\"fixed px-1 py-1 bg-blue rounded-full\"> </i>';\n            },\n            onClick: undefined,\n            offsetX: 0,\n            offsetY: 0\n          }\n        },\n        plotOptions: {\n          pie: {\n            expandOnClick: false,\n            donut: {\n              size: '90%',\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontFamily: 'Poppins',\n                  fontSize: '24px',\n                  fontWeight: 600,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                value: {\n                  show: true,\n                  fontFamily: 'Poppins',\n                  fontSize: '24px',\n                  fontWeight: 600,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                total: {\n                  show: true,\n                  showAlways: false,\n                  label: 'Completed',\n                  fontSize: '20px',\n                  fontFamily: 'Poppins',\n                  fontWeight: 500,\n                  color: '#2ED47A',\n                  formatter: function formatter(w) {\n                    var val = w.globals.seriesTotals[0] * 10;\n                    return +val.toString() + '%';\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DonutChart, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"donut mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 4\n        }\n      }, __jsx(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"donut\",\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return DonutChart;\n}(Component);\n\nexport default DonutChart;","map":{"version":3,"sources":["/Users/tarik/Desktop/admin-app/components/DonutChart.js"],"names":["React","Component","dynamic","Chart","ssr","DonutChart","props","state","series","options","labels","colors","dataLabels","enabled","dropShadow","legend","fontSize","fontFamily","fontWeight","markers","width","height","strokeWidth","strokeColor","fillColors","undefined","radius","customHTML","onClick","offsetX","offsetY","plotOptions","pie","expandOnClick","donut","size","show","name","formatter","val","value","total","showAlways","label","color","w","globals","seriesTotals","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\n\nclass DonutChart extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tseries: [8, 1, 1], // Green, red, yellow\n\n\t\t\toptions: {\n\t\t\t\tlabels: ['Completed', 'Ended', 'Pending'],\n\t\t\t\tcolors: ['#2ED47A', '#F7685B', '#FFB946'],\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tdropShadow: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\tfontFamily: 'Poppins',\n\t\t\t\t\tfontWeight: 400,\n\t\t\t\t\tmarkers: {\n\t\t\t\t\t\twidth: 12,\n\t\t\t\t\t\theight: 12,\n\t\t\t\t\t\tstrokeWidth: 0,\n\t\t\t\t\t\tstrokeColor: '#fff',\n\t\t\t\t\t\tfillColors: undefined,\n\t\t\t\t\t\tradius: 12,\n\t\t\t\t\t\tcustomHTML: function () {\n\t\t\t\t\t\t\treturn '<i class=\"fixed px-1 py-1 bg-blue rounded-full\"> </i>';\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClick: undefined,\n\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tpie: {\n\t\t\t\t\t\texpandOnClick: false,\n\n\t\t\t\t\t\tdonut: {\n\t\t\t\t\t\t\tsize: '90%',\n\n\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\n\t\t\t\t\t\t\t\t\tfontSize: '24px',\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\n\t\t\t\t\t\t\t\t\tfontSize: '24px',\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttotal: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tshowAlways: false,\n\t\t\t\t\t\t\t\t\tlabel: 'Completed',\n\t\t\t\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tcolor: '#2ED47A',\n\t\t\t\t\t\t\t\t\tformatter: function (w) {\n\t\t\t\t\t\t\t\t\t\tvar val = w.globals.seriesTotals[0] * 10;\n\t\t\t\t\t\t\t\t\t\treturn +val.toString() + '%';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"donut mt-2\">\n\t\t\t\t<Chart\n\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\tseries={this.state.series}\n\t\t\t\t\ttype=\"donut\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DonutChart;\n"]},"metadata":{},"sourceType":"module"}