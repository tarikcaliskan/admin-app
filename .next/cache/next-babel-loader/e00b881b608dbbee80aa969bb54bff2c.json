{"ast":null,"code":"var _jsxFileName = \"/Users/tarik/Desktop/admin-app/components/Cart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Chart from 'chart.js';\nimport classes from './LineGraph.module.css'; //--Chart Style Options--//\n\nChart.defaults.global.defaultFontFamily = \"'Poppins', sans-serif\";\nChart.defaults.global.legend.display = false; //--Chart Style Options--//\n\nexport default class LineGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: managerData,\n      labels: yearLabels\n    });\n\n    _defineProperty(this, \"chartRef\", React.createRef());\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext('2d');\n    new Chart(myChartRef, {\n      type: 'line',\n      data: {\n        //Bring in data\n        labels: ['Jan', 'Feb', 'March'],\n        datasets: [{\n          label: 'Sales',\n          data: data,\n          fill: false,\n          borderColor: '#98B9AB'\n        }, {\n          label: 'National Average',\n          data: average,\n          fill: false,\n          borderColor: '#98B9AB'\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: classes.graphContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, __jsx(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tarik/Desktop/admin-app/components/Cart.js"],"names":["React","Component","Chart","classes","defaults","global","defaultFontFamily","legend","display","LineGraph","data","managerData","labels","yearLabels","createRef","componentDidMount","myChartRef","chartRef","current","getContext","type","datasets","label","fill","borderColor","average","options","render","graphContainer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAEA;;AACAD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsBC,iBAAtB,GAA0C,uBAA1C;AACAJ,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsBE,MAAtB,CAA6BC,OAA7B,GAAuC,KAAvC,C,CACA;;AAEA,eAAe,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxC;AACPS,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,MAAM,EAAEC;AAFD,KADwC;;AAAA,sCAKrCb,KAAK,CAACc,SAAN,EALqC;AAAA;;AAOhDC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,UAAU,GAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIjB,KAAJ,CAAUc,UAAV,EAAsB;AACrBI,MAAAA,IAAI,EAAE,MADe;AAErBV,MAAAA,IAAI,EAAE;AACL;AACAE,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFH;AAGLS,QAAAA,QAAQ,EAAE,CACT;AACCC,UAAAA,KAAK,EAAE,OADR;AAECZ,UAAAA,IAAI,EAAEA,IAFP;AAGCa,UAAAA,IAAI,EAAE,KAHP;AAICC,UAAAA,WAAW,EAAE;AAJd,SADS,EAOT;AACCF,UAAAA,KAAK,EAAE,kBADR;AAECZ,UAAAA,IAAI,EAAEe,OAFP;AAGCF,UAAAA,IAAI,EAAE,KAHP;AAICC,UAAAA,WAAW,EAAE;AAJd,SAPS;AAHL,OAFe;AAoBrBE,MAAAA,OAAO,EAAE,CACR;AADQ;AApBY,KAAtB;AAwBA;;AACDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAExB,OAAO,CAACyB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAE,KAAKX,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AAzC+C","sourcesContent":["import React, { Component } from 'react';\nimport Chart from 'chart.js';\nimport classes from './LineGraph.module.css';\n\n//--Chart Style Options--//\nChart.defaults.global.defaultFontFamily = \"'Poppins', sans-serif\";\nChart.defaults.global.legend.display = false;\n//--Chart Style Options--//\n\nexport default class LineGraph extends Component {\n\tstate = {\n\t\tdata: managerData,\n\t\tlabels: yearLabels,\n\t};\n\tchartRef = React.createRef();\n\n\tcomponentDidMount() {\n\t\tconst myChartRef = this.chartRef.current.getContext('2d');\n\n\t\tnew Chart(myChartRef, {\n\t\t\ttype: 'line',\n\t\t\tdata: {\n\t\t\t\t//Bring in data\n\t\t\t\tlabels: ['Jan', 'Feb', 'March'],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Sales',\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tborderColor: '#98B9AB',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'National Average',\n\t\t\t\t\t\tdata: average,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tborderColor: '#98B9AB',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\t//Customize chart options\n\t\t\t},\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.graphContainer}>\n\t\t\t\t<canvas id=\"myChart\" ref={this.chartRef} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}