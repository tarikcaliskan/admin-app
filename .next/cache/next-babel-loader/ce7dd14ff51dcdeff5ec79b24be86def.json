{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tarik/Desktop/admin-app/components/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nvar Chart = dynamic(function () {\n  return import('react-apexcharts');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-apexcharts')];\n    },\n    modules: ['react-apexcharts']\n  }\n});\n\nvar MyApex = /*#__PURE__*/function (_Component) {\n  _inherits(MyApex, _Component);\n\n  var _super = _createSuper(MyApex);\n\n  function MyApex(props) {\n    var _this;\n\n    _classCallCheck(this, MyApex);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      options: {\n        grid: {\n          strokeDashArray: 10\n        },\n        chart: {\n          id: 'basic-bar',\n          type: 'area',\n          fontFamily: 'Poppins',\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: ['1 Dec', '8 Dec', '16 Dec', '31 Dec'],\n          style: {\n            fontSize: '16px',\n            fontWeight: 500\n          }\n        },\n        stroke: {\n          curve: 'smooth'\n        }\n      },\n      series: [{\n        name: 'series-1',\n        data: [50, 150, 60, 150]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(MyApex, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 4\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }\n      }, __jsx(\"div\", {\n        className: \"mixed-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }\n      }, __jsx(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"area\",\n        width: \"700\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n\n  return MyApex;\n}(Component);\n\nexport { MyApex as default };","map":{"version":3,"sources":["/Users/tarik/Desktop/admin-app/components/Chart.js"],"names":["React","Component","dynamic","Chart","ssr","MyApex","props","state","options","grid","strokeDashArray","chart","id","type","fontFamily","toolbar","show","dataLabels","enabled","xaxis","categories","style","fontSize","fontWeight","stroke","curve","series","name","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC;AAAA,SAAM,OAAO,kBAAP,CAAN;AAAA,CAAD,EAAmC;AAAEE,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA;AAAA,kCAArB,kBAAqB;AAAA;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAAnC,CAArB;;IACqBC,M;;;;;AACpB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AACRC,QAAAA,IAAI,EAAE;AACLC,UAAAA,eAAe,EAAE;AADZ,SADE;AAIRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,EAAE,EAAE,WADE;AAENC,UAAAA,IAAI,EAAE,MAFA;AAGNC,UAAAA,UAAU,EAAE,SAHN;AAINC,UAAAA,OAAO,EAAE;AACRC,YAAAA,IAAI,EAAE;AADE;AAJH,SAJC;AAYRC,QAAAA,UAAU,EAAE;AACXC,UAAAA,OAAO,EAAE;AADE,SAZJ;AAeRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,QAA7B,CADN;AAENC,UAAAA,KAAK,EAAE;AACNC,YAAAA,QAAQ,EAAE,MADJ;AAENC,YAAAA,UAAU,EAAE;AAFN;AAFD,SAfC;AAsBRC,QAAAA,MAAM,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA;AAtBA,OADG;AA2BZC,MAAAA,MAAM,EAAE,CACP;AACCC,QAAAA,IAAI,EAAE,UADP;AAECC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,GAAd;AAFP,OADO;AA3BI,KAAb;AAHkB;AAqClB;;;;6BACQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AACC,QAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC,OADrB;AAEC,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWmB,MAFpB;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,KAAK,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CADD,CADD;AAcA;;;;EAtDkCzB,S;;SAAfI,M","sourcesContent":["import React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\nexport default class MyApex extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tgrid: {\n\t\t\t\t\tstrokeDashArray: 10,\n\t\t\t\t},\n\t\t\t\tchart: {\n\t\t\t\t\tid: 'basic-bar',\n\t\t\t\t\ttype: 'area',\n\t\t\t\t\tfontFamily: 'Poppins',\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\tcategories: ['1 Dec', '8 Dec', '16 Dec', '31 Dec'],\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t},\n\t\t\t},\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'series-1',\n\t\t\t\t\tdata: [50, 150, 60, 150],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"mixed-chart\">\n\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\t\tseries={this.state.series}\n\t\t\t\t\t\t\ttype=\"area\"\n\t\t\t\t\t\t\twidth=\"700\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}