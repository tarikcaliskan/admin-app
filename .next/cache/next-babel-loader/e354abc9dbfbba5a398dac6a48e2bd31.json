{"ast":null,"code":"var _jsxFileName = \"/Users/tarik/Desktop/admin-app/components/CartD.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport classes from './Dashboard.module.css';\nimport LineGraph from './Cart';\nimport { managerData, yearLabels, quarterLabels } from './mockData';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: managerData,\n      labels: yearLabels\n    });\n\n    _defineProperty(this, \"handleButtonClick\", e => {\n      const {\n        value\n      } = e.target;\n      const isAnnual = value === 'annual';\n      const newData = isAnnual ? managerData : managerQuarterData;\n      const newLabels = isAnnual ? yearLabels : quarterLabels;\n      const newAverage = isAnnual;\n      this.setState({\n        data: newData,\n        average: newAverage,\n        labels: newLabels\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      average,\n      labels\n    } = this.state;\n    return __jsx(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, \"Sales Dashboard\")), __jsx(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, __jsx(\"button\", {\n      value: \"annual\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }, \"Annual\"), __jsx(\"button\", {\n      value: \"lastquarter\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }, \"Last Quarter\")), __jsx(LineGraph, {\n      data: data,\n      average: average,\n      labels: labels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tarik/Desktop/admin-app/components/CartD.js"],"names":["React","Component","classes","LineGraph","managerData","yearLabels","quarterLabels","Dashboard","data","labels","e","value","target","isAnnual","newData","managerQuarterData","newLabels","newAverage","setState","average","render","state","container","buttonContainer","handleButtonClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAEA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,QAAuD,YAAvD;AAEA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxC;AACPO,MAAAA,IAAI,EAAEJ,WADC;AAEPK,MAAAA,MAAM,EAAEJ;AAFD,KADwC;;AAAA,+CAM3BK,CAAD,IAAO;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAYD,CAAC,CAACE,MAApB;AACA,YAAMC,QAAQ,GAAGF,KAAK,KAAK,QAA3B;AAEA,YAAMG,OAAO,GAAGD,QAAQ,GAAGT,WAAH,GAAiBW,kBAAzC;AACA,YAAMC,SAAS,GAAGH,QAAQ,GAAGR,UAAH,GAAgBC,aAA1C;AACA,YAAMW,UAAU,GAAGJ,QAAnB;AAEA,WAAKK,QAAL,CAAc;AACbV,QAAAA,IAAI,EAAEM,OADO;AAEbK,QAAAA,OAAO,EAAEF,UAFI;AAGbR,QAAAA,MAAM,EAAEO;AAHK,OAAd;AAKA,KAnB+C;AAAA;;AAqBhDI,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEZ,MAAAA,IAAF;AAAQW,MAAAA,OAAR;AAAiBV,MAAAA;AAAjB,QAA4B,KAAKY,KAAvC;AACA,WACC;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACoB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,CADD,EAKC;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAACqB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAKC;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,KAAKA,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALD,CALD,EAeC,MAAC,SAAD;AAAW,MAAA,IAAI,EAAEhB,IAAjB;AAAuB,MAAA,OAAO,EAAEW,OAAhC;AAAyC,MAAA,MAAM,EAAEV,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,CADD;AAmBA;;AA1C+C","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Dashboard.module.css';\nimport LineGraph from './Cart';\n\nimport { managerData, yearLabels, quarterLabels } from './mockData';\n\nexport default class Dashboard extends Component {\n\tstate = {\n\t\tdata: managerData,\n\t\tlabels: yearLabels,\n\t};\n\n\thandleButtonClick = (e) => {\n\t\tconst { value } = e.target;\n\t\tconst isAnnual = value === 'annual';\n\n\t\tconst newData = isAnnual ? managerData : managerQuarterData;\n\t\tconst newLabels = isAnnual ? yearLabels : quarterLabels;\n\t\tconst newAverage = isAnnual;\n\n\t\tthis.setState({\n\t\t\tdata: newData,\n\t\t\taverage: newAverage,\n\t\t\tlabels: newLabels,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { data, average, labels } = this.state;\n\t\treturn (\n\t\t\t<div className={classes.container}>\n\t\t\t\t<header>\n\t\t\t\t\t<h1>Sales Dashboard</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div className={classes.buttonContainer}>\n\t\t\t\t\t<button value=\"annual\" onClick={this.handleButtonClick}>\n\t\t\t\t\t\tAnnual\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button value=\"lastquarter\" onClick={this.handleButtonClick}>\n\t\t\t\t\t\tLast Quarter\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<LineGraph data={data} average={average} labels={labels} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}