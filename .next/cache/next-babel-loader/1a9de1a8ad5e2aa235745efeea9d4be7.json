{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nvar Chart = dynamic(function () {\n  return import('react-apexcharts');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-apexcharts')];\n    },\n    modules: ['react-apexcharts']\n  }\n});\n\nvar DonutChart = /*#__PURE__*/function (_Component) {\n  _inherits(DonutChart, _Component);\n\n  var _super = _createSuper(DonutChart);\n\n  function DonutChart(props) {\n    var _this;\n\n    _classCallCheck(this, DonutChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      series: [8, 1, 1],\n      // Green, red, yellow\n      options: {\n        labels: ['Completed', 'Ended', 'Pending'],\n        colors: ['#2ED47A', '#F7685B', '#FFB946'],\n        dataLabels: {\n          enabled: false\n        },\n        dropShadow: {\n          enabled: false\n        },\n        legend: {\n          fontSize: '14px',\n          fontFamily: 'Poppins',\n          fontWeight: 400,\n          horizontalAlign: 'center',\n          markers: {\n            width: 12,\n            height: 12,\n            strokeWidth: 0,\n            strokeColor: '#fff',\n            fillColors: undefined,\n            radius: 12,\n            onClick: undefined,\n            offsetX: 0,\n            offsetY: 0\n          },\n          itemMargin: {\n            vertical: 5\n          }\n        },\n        plotOptions: {\n          pie: {\n            expandOnClick: false,\n            donut: {\n              size: '90%',\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontFamily: 'Poppins',\n                  fontSize: '24px',\n                  fontWeight: 600,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                value: {\n                  show: true,\n                  fontFamily: 'Poppins',\n                  fontSize: '24px',\n                  fontWeight: 600,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                total: {\n                  show: true,\n                  showAlways: false,\n                  label: 'Completed',\n                  fontSize: '20px',\n                  fontFamily: 'Poppins',\n                  fontWeight: 500,\n                  color: '#2ED47A',\n                  formatter: function formatter(w) {\n                    var val = w.globals.seriesTotals[0] * 10;\n                    return +val.toString() + '%';\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DonutChart, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"donut mt-2\"\n      }, __jsx(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"donut\",\n        width: \"100%\"\n      }));\n    }\n  }]);\n\n  return DonutChart;\n}(Component);\n\nexport default DonutChart;","map":null,"metadata":{},"sourceType":"module"}